INCLUDE 'COSY';
PROCEDURE RUN;

VARIABLE NM 1;
VARIABLE PI 1;
VARIABLE I 2;
VARIABLE J 1;
VARIABLE ORDER 1;
VARIABLE MPAR 1;
VARIABLE ZX 1000;
VARIABLE ZY 1000;
VARIABLE Z 2 1000;
VARIABLE ZXI 1000;
VARIABLE ZYI 1000;
VARIABLE ALPHA 60;
VARIABLE P0 1 60;
VARIABLE P1 1 60;
VARIABLE A0 1 80;
VARIABLE AN 1 80;
VARIABLE BN 1 80;
VARIABLE C 2;
VARIABLE L 1;
VARIABLE K 1;
VARIABLE KP 1;
VARIABLE NPOINTS 1;
VARIABLE ZPOINT0 2;
VARIABLE IER 1;
VARIABLE V 1;
VARIABLE V1 1; VARIABLE V2 1; VARIABLE V3 1; VARIABLE V4 1;
VARIABLE D1 1; VARIABLE D2 1; VARIABLE D3 1; VARIABLE D4 1;
VARIABLE D10 1; VARIABLE D20 1; VARIABLE D30 1; VARIABLE D40 1;
VARIABLE R 1;
VARIABLE Rref 1;
VARIABLE INPUTCHAR 1;
VARIABLE CPUTIME1 1;
VARIABLE CPUTIME2 1;
VARIABLE POLYGONSTR 80 200;
VARIABLE A0 1;
VARIABLE AN 1 100;
VARIABLE BN 1 100;
VARIABLE A01 1;
VARIABLE AN1 1 100;
VARIABLE BN1 1 100;
VARIABLE A02 1;
VARIABLE AN2 1 100;
VARIABLE BN2 1 100;
VARIABLE A03 1;
VARIABLE AN3 1 100;
VARIABLE BN3 1 100;
VARIABLE A04 1;
VARIABLE AN4 1 100;
VARIABLE BN4 1 100;
VARIABLE IMGINDX 1;
VARIABLE MAPF0 4000;
VARIABLE CALCDONE 1;
VARIABLE CALCMODE 1;

FUNCTION EXP1 X;
	VARIABLE XR NM;
	VARIABLE XI NM;
	VARIABLE RESULT NM;
	VARIABLE I 2;
	I:=CM(0&1);
	XR:=REAL(X);
	XI:=IMAG(X);
	RESULT:=EXP(XR)*(COS(XI)+I*SIN(XI));
	EXP1:=RESULT;
ENDFUNCTION;

FUNCTION POW A B;
	POW:=EXP1(B*LOG(A));
ENDFUNCTION;

FUNCTION LOG1 A;
	VARIABLE LOG10 NM;
	VARIABLE LOG110 NM;
	VARIABLE LOG11 NM;
	LOG10:=LOG(CONS(A));
	LOG110:=DER(1,A)*1/A;
	DAINT 1 LOG110 LOG11;
	LOG1:=LOG10+LOG11;
ENDFUNCTION;

FUNCTION SINH1 A;
	SINH1:=(EXP1(A)-EXP1(-A))/2;
ENDFUNCTION;

PROCEDURE MI1 M N L IER NO NV NM1 ;                {INVERTS DA MAP M INTO N}
     {NO,NV,NM1: The current computational order, DA dimension, DA size.}
      VARIABLE C 2 L ; VARIABLE AL 2 L L ; VARIABLE AI 2 L L ; VARIABLE CL 2 L ;
      VARIABLE AN NM1 L ; VARIABLE ANR NM1 L ; VARIABLE ANI NM1 L ;
      VARIABLE SM NM1 L ; VARIABLE DDA 2 L ;
      VARIABLE SCR NM1 ; VARIABLE I 1 ; VARIABLE J 1 ; VARIABLE K 1 ;
      VARIABLE NR NM1 L; VARIABLE NI NM1 L;
      PROCEDURE DACLIW1 SCR L CL;
      	VARIABLE J 1;
      	VARIABLE CL0 2 L;
      	LOOP J 1 L; CL(J):=DER(J,SCR); ENDLOOP;
      ENDPROCEDURE;
      IF L>NV ; WRITE 6 ' *** ERROR IN MI, DIM TOO LARGE' ; QUIT 0 ; ENDIF ;
      LOOP I 1 L ; DDA(I) := DA(I) ; DANOT 1 ; SCR := M(I) ; DANOT NO ;
         C(I) := CONS(SCR) ; AN(I) := M(I)-SCR ; DACLIW1 SCR L CL ;
         LOOP J 1 L ; AL(I,J) := CL(J) ; ENDLOOP ; N(I) := 0 ; ENDLOOP ;
      {MATINV1 AL AI L ;} AI(1,1):=1/AL(1,1); IF IER#0 ; IER := 1 ; ENDIF ;
      IF NO>1 ;
      	LOOP I 1 L; ANR(I):=REAL(AN(I)); ANI(I):=IMAG(AN(I)); ENDLOOP;
      	POLVAL 1 ANR L N L NR L ; POLVAL 1 ANI L N L NI L ;
      	LOOP I 1 L; N(I):=CM(0&1)*NI(I)+NR(I); ENDLOOP; 
      ENDIF ;
      LOOP I 1 L ; N(I) := 0 ;
         LOOP J 1 L ; N(I) := N(I) + AI(I,J)*DDA(J) ; ENDLOOP ; ENDLOOP ;
      LOOP I 2 NO ; DANOT I ;
      	 POLVAL 1 ANR L N L NR L ; POLVAL 1 ANI L N L NI L ;
      	 LOOP J 1 L; N(J):=CM(0&1)*NI(J)+NR(J); ENDLOOP; 
         LOOP J 1 L ; SM(J) := 0 ; LOOP K 1 L ;
            SM(J) := SM(J) + AI(J,K)*(DDA(K)-N(K)) ; ENDLOOP ; ENDLOOP ;
         LOOP J 1 L ; N(J) := SM(J) ; ENDLOOP ; ENDLOOP ;
      LOOP I 1 L ; SM(I) := DDA(I) - C(I) ; ENDLOOP ;
      LOOP I 1 L; NR(I):=REAL(N(I)); NI(I):=IMAG(N(I)); ENDLOOP; 
      POLVAL 1 NR L SM L NR L ; POLVAL 1 NI L SM L NI L ;
      LOOP I 1 L; N(I):=CM(0&1)*NI(I)+NR(I); ENDLOOP; 
ENDPROCEDURE ;

FUNCTION RFCARLSON X Y Z;
	{Carlson's elliptic integral of the first kind (scalar value).
	GNU Software Library, specfunc, ellint.c, gsl_sf_ellint_RF_e
	M. Galassi et al, GNU Scientific Library Reference Manual (3rd Ed.), ISBN 0954612078}
	VARIABLE ERRORTOL 1;
	VARIABLE NMAX 1;
	VARIABLE C1 1; VARIABLE C2 1; VARIABLE C3 1;
	VARIABLE XN 1; VARIABLE YN 1; VARIABLE ZN 1;
	VARIABLE MU 1; VARIABLE XNDEV 1; VARIABLE YNDEV 1; VARIABLE ZNDEV 1;
	VARIABLE E2 1; VARIABLE E3 1; VARIABLE S 1;
	VARIABLE N 1;
	VARIABLE EPSLON 1; VARIABLE LAMBDA 1;
	VARIABLE XNROOT 1; VARIABLE YNROOT 1; VARIABLE ZNROOT 1;
	ERRORTOL:=0.0005;
	NMAX:=10000;
	IF (X<0)+(Y<0)+(Z<0);
		WRITE 6 'RFCARLSON: DOMAIN ERROR';
		QUIT -1;
	ELSEIF NOT(X+Y>0)+NOT(Y+Z>0)+NOT(X+Z>0);
		WRITE 6 'RFCARLSON: DOMAIN ERROR';
		QUIT -1;
	ENDIF;
	C1:=1.0/24.0; C2:=3.0/44.0; C3:=1.0/14.0;
	N:=0;
	WHILE (EPSLON>ERRORTOL);
		MU:=(XN+YN+ZN)/3.0;
		XNDEV:=2.0-(MU+XN)/MU;
		YNDEV:=2.0-(MU+YN)/MU;
		ZNDEV:=2.0-(MU+ZN)/MU;
		EPSLON:=MAX(MAX(ABS(XNDEV),ABS(YNDEV)),ABS(ZNDEV));
		XNROOT:=SQRT(XN);
		YNROOT:=SQRT(YN);
		ZNROOT:=SQRT(ZN);
		LAMBDA:=XNROOT*(YNROOT+ZNROOT)+YNROOT*ZNROOT;
		XN:=(XN+LAMBDA)*0.25;
		YN:=(YN+LAMBDA)*0.25;
		ZN:=(ZN+LAMBDA)*0.25;
		N:=N+1;
		IF (N=NMAX);
			WRITE 6 'RFCARLSON: MAX ITERATIONS REACHED';
		ENDIF;
	ENDWHILE;
	E2:=XNDEV*YNDEV-ZNDEV*ZNDEV;
	E3:=XNDEV*YNDEV*ZNDEV;
	RFCARLSON:=1.0+(C1*E2-0.1-C2*E3)*E2+C3*E3;
ENDFUNCTION;

FUNCTION ELLINT_F PHI K;
	{Legendre elliptic integral of the first kind F (scalar value).
	GNU Software Library, specfunc, ellint.c, gsl_sf_ellint_F_e
	M. Galassi et al, GNU Scientific Library Reference Manual (3rd Ed.), ISBN 0954612078}
	VARIABLE SIN_PHI 1;
	VARIABLE X 1;
	VARIABLE Y 1;
	SIN_PHI:=SIN(PHI);
	X:=COS(PHI)*COS(PHI);
	Y:=(1.0+K*SIN_PHI)*(1.0-K*SIN_PHI);
	ELLINT_F:=SIN_PHI*RFCARLSON(X,Y,1.0);
ENDFUNCTION;

FUNCTION ELLIPTICF PHI K;
	{Legendre elliptic integral of the first kind F (DA value).}
	VARIABLE MAPF NM;
	VARIABLE MAPF1 NM;
	VARIABLE MAPF11 NM;
	VARIABLE MAPF12 NM;
	VARIABLE A 1;
	A:=CONS(PHI);
	MAPF12:=ELLINT_F(A,K);
	MAPF:=1/SQRT(1-K*K*SIN(A+DA(1))*SIN(A+DA(1)));
	DAINT 1 MAPF MAPF1;
	MAPF12:=MAPF12+MAPF1;
	ELLIPTICF:=MAPF12;
ENDFUNCTION;

FUNCTION JAMP X KIN;
	{Jacobi amplitude (scalar value).
	Arithmetic-geometric mean method, based on subsec. 22.20(ii) at http://dlmf.nist.gov/22.20
	NIST Digital Library of Mathematical Functions. http://dlmf.nist.gov/, Release 1.0.14 of 2016-12-21. F. W. J. Olver,
	A. B. Olde Daalhuis, D. W. Lozier, B. I. Schneider, R. F. Boisvert, C. W. Clark, B. R. Miller, and B. V. Saunders, eds.}
	VARIABLE EPS 1;
	VARIABLE A NM 1000; VARIABLE B NM 1000; VARIABLE C NM 1000;
	VARIABLE PHI NM; VARIABLE PHI1 NM; 
	VARIABLE N 1; VARIABLE NN 1;
	VARIABLE K 1; VARIABLE KP 1; 
	VARIABLE BRFLAG 1; VARIABLE J 1;
	EPS:=1E-18;
	K:=KIN; KP:=SQRT(1-K*K);
	A(1):=1; B(1):=KP; C(1):=K;
	N:=0;
	LOOP J 1 100; IF BRFLAG=0;
		N:=N+1;
		A(J+1):=(A(J)+B(J))/2;
		B(J+1):=SQRT(A(J)*B(J));
		C(J+1):=(A(J)-B(J))/2;
		IF ABS(C(J+1))<EPS;
			BRFLAG:=1;
		ENDIF;
	ENDIF; ENDLOOP;
	NN:=N;
	PHI:=(2^NN)*A(NN+1)*X;
	LOOP J NN 1 -1;
		PHI1:=PHI;
		PHI:=(PHI+ASIN(SIN(PHI)*C(J+1)/A(J+1)))/2;
	ENDLOOP;
	JAMP:=PHI;
ENDFUNCTION;

PROCEDURE SNCNDN U EMMC SN CN DN;
	VARIABLE MAPF NM 1;
	VARIABLE MAPF0 NM 1;
	VARIABLE MAPF1 NM 1;
	VARIABLE MAPF11 NM 1;
	VARIABLE MAPF12 NM;
	VARIABLE A 1 1;
	VARIABLE C0 NM 1;
	VARIABLE K 1;
	K:=SQRT(EMMC);
	MAPF(1):=ELLIPTICF(JAMP(CONS(U),K),K);
	MAPF0(1):=MAPF(1)-CONS(MAPF(1));
	MI MAPF0 MAPF1 1 IER ORDER 1 NM;
	MAPF1(1):=MAPF1(1)+JAMP(CONS(U),K);
	C0(1):=U-CONS(U);
	POLVAL 1 MAPF1 1 C0 1 MAPF11 1 ;
	MAPF12:=MAPF11(1);
	SN:=SIN(MAPF12);
	CN:=COS(MAPF12);
	DN:=SQRT(1-K*K*SIN(MAPF12)*SIN(MAPF12));
ENDPROCEDURE;

FUNCTION SNRAW UU EMMC;
	VARIABLE SN0 NM; VARIABLE CN0 NM; VARIABLE DN0 NM;
	SNCNDN UU EMMC SN0 CN0 DN0;
	SNRAW:=SN0;
ENDFUNCTION;

FUNCTION CNRAW UU EMMC;
	VARIABLE SN0 NM; VARIABLE CN0 NM; VARIABLE DN0 NM;
	SNCNDN UU EMMC SN0 CN0 DN0;
	CNRAW:=CN0;
ENDFUNCTION;

FUNCTION DNRAW UU EMMC;
	VARIABLE SN0 NM; VARIABLE CN0 NM; VARIABLE DN0 NM;
	SNCNDN UU EMMC SN0 CN0 DN0;
	DNRAW:=DN0;
ENDFUNCTION;

PROCEDURE SNCNDNI UU EMMC SN00 CN00 DN00;
	VARIABLE SN0 NM; VARIABLE CN0 NM; VARIABLE DN0 NM;
	SNCNDN UU EMMC SN0 CN0 DN0;
	SN00:=SN0;
	CN00:=CN0;
	DN00:=DN0;
ENDPROCEDURE;

PROCEDURE ELLIPJI UU EMMC EMMC1 SNI CNI DNI;
	VARIABLE SN0 NM; VARIABLE CN0 NM; VARIABLE DN0 NM;
	VARIABLE SN1 NM; VARIABLE CN1 NM; VARIABLE DN1 NM;
	VARIABLE DELTA NM; VARIABLE I 2;
	I:=CM(0&1);
	SNCNDNI REAL(UU) EMMC SN0 CN0 DN0;	
	IF 1=1;
		SNCNDNI IMAG(UU) EMMC1 SN1 CN1 DN1;
		DELTA:=CN1*CN1+EMMC*SN0*SN0*SN1*SN1;
		SNI:=(SN0*DN1+I*CN0*DN0*SN1*CN1)/DELTA;
		CNI:=(CN0*CN1-I*SN0*DN0*SN1*DN1)/DELTA;
		DNI:=(DN0*CN1*DN1-I*EMMC*SN0*CN0*SN1)/DELTA;
	ELSEIF 1=1;
		SNI:=SN0;
		CNI:=CN0;
		DNI:=DN0;
	ENDIF;
ENDPROCEDURE;

FUNCTION SN UU EMMC EMMC1;
	VARIABLE UU0 NM;
	VARIABLE SN0 NM; VARIABLE CN0 NM; VARIABLE DN0 NM;
	VARIABLE FF1 1;
	FF1:=0; UU0:=UU;
	IF IMAG(CONS(UU0))>KP/2; UU0:=CM(0&KP)-UU0; FF1:=1; ENDIF;
	ELLIPJI UU0 EMMC EMMC1 SN0 CN0 DN0;
	IF FF1=1; SN0:=-1/(SQRT(EMMC)*SN0); ENDIF;
 	SN:=SN0;
ENDFUNCTION;

FUNCTION CN UU EMMC EMMC1;
	VARIABLE UU0 NM;
	VARIABLE SN0 NM; VARIABLE CN0 NM; VARIABLE DN0 NM;
	VARIABLE FF1 1;
	FF1:=0; UU0:=UU;
	IF IMAG(CONS(UU0))>KP/2; UU0:=CM(0&KP)-UU0; FF1:=1; ENDIF;
	ELLIPJI UU0 EMMC EMMC1 SN0 CN0 DN0;
	IF FF1=1; CN0:=CM(0&1)*DN0/(SQRT(EMMC)*SN0); ENDIF;
 	CN:=CN0;
ENDFUNCTION;

FUNCTION DN UU EMMC EMMC1;
	VARIABLE UU0 NM;
	VARIABLE SN0 NM; VARIABLE CN0 NM; VARIABLE DN0 NM;
	VARIABLE FF1 1;
	FF1:=0; UU0:=UU;
	IF IMAG(CONS(UU0))>KP/2; UU0:=CM(0&KP)-UU0; FF1:=1; ENDIF;
	ELLIPJI UU0 EMMC EMMC1 SN0 CN0 DN0;
	IF FF1=1; DN0:=CM(0&1)*CN0/SN0; ENDIF;
 	DN:=DN0;
ENDFUNCTION;

FUNCTION R2STRIP ZP L;
	{Based on SC Toolbox function R2STRIP}
	VARIABLE K 1;
	VARIABLE KP 1;
	VARIABLE M 1;
	VARIABLE SN1 NM;
	VARIABLE T1 1;
	VARIABLE T2 1;
	K:=VMAX(ZX);
	KP:=VMAX(ZY);
	M:=EXP(-2*PI*L);
	SN1:=SN(ZP,M,1-M);
	T1:=REAL(CONS(SN1));
	T2:=MAX(0,IMAG(CONS(SN1)));
	SN1:=SN1-CONS(SN1)+CM(T1&T2);
	R2STRIP:=LOG1(SN1)/PI;
	T1:=REAL(CONS(R2STRIP));
	T2:=IMAG(CONS(R2STRIP));
	IF T2<-0.5; T2:=-T2; ENDIF;
	R2STRIP:=R2STRIP-CONS(R2STRIP)+CM(MAX(0,T1)&T2);
	T1:=REAL(CONS(R2STRIP));
	T2:=IMAG(CONS(R2STRIP));
	R2STRIP:=R2STRIP-CONS(R2STRIP)+CM(T1&MAX(0,T2));
	T1:=REAL(CONS(R2STRIP));
	T2:=IMAG(CONS(R2STRIP));
	R2STRIP:=R2STRIP-CONS(R2STRIP)+CM(T1&MIN(1,T2));
ENDFUNCTION;

FUNCTION R2STRIPDER ZP L;
	{Based on SC Toolbox function R2STRIP}
	VARIABLE K 1;
	VARIABLE KP 1;
	VARIABLE M 1;
	VARIABLE SN1 NM;
	VARIABLE T1 1;
	VARIABLE T2 1;
	K:=VMAX(ZX);
	KP:=VMAX(ZY);
	M:=EXP(-2*PI*L);
	SN1:=SN(ZP,M,1-M);
	T1:=REAL(CONS(SN1));
	T2:=MAX(0,IMAG(CONS(SN1)));
	SN1:=SN1-CONS(SN1)+CM(T1&T2);
	R2STRIPDER:=CN(ZP,M,1-M)*DN(ZP,M,1-M)/SN1/PI;
ENDFUNCTION;

FUNCTION STDERIV ZP Z BETA;
	{Based on SC Toolbox function STDERIV}
	VARIABLE LOG2 1;
	VARIABLE THETA 1;
	VARIABLE STDERIV0 NM;
	VARIABLE J 1;
	VARIABLE TERMS NM NPOINTS;
	VARIABLE TERMSSUM NM;
	VARIABLE TERMSSUM1 NM;
	LOG2:=LOG(2);
	THETA:=0;
	TERMSSUM:=0;
	TERMSSUM1:=0;
	LOOP J 1 NPOINTS;
		TERMS(J):=-PI/2*(ZP-Z(J));
		IF NOT(IMAG(CONS(TERMS(J)))>0);
			TERMS(J):=-TERMS(J);
		ENDIF;
		TERMS(J):=LOG1(-I*SINH1(TERMS(J)));
		TERMSSUM:=TERMSSUM+TERMS(J)*BETA(J);
		TERMSSUM1:=TERMSSUM1+TERMS(J);
	ENDLOOP;
	STDERIV0:=EXP1(TERMSSUM);
	STDERIV:=STDERIV0;
ENDFUNCTION;

FUNCTION RDERIV ZP;
	{Compute the value of the SC rectangular map at points ZP
	ZP is an complex-valued array.
	Based on SC Toolbox function RDERIV}
	VARIABLE ZS0 NM 1000;
	VARIABLE ZS NM 1000;
	VARIABLE BS NM 1000;
	VARIABLE DG NM;
	VARIABLE DF NM;
	VARIABLE F NM;
	VARIABLE J 1;
	LOOP J 1 NPOINTS; ZS0(J):=CONS(R2STRIP(Z(J),L)); ENDLOOP;
	LOOP J 1 NPOINTS; BS(J):=ALPHA|J-1; ENDLOOP;
	LOOP J 1 NPOINTS; ZS(J):=CM(REAL(ZS0(J))&INT(IMAG(ZS0(J))+0.5)); ENDLOOP;
	F:=R2STRIP(ZP,L);
	DF:=R2STRIPDER(ZP,L);
	DG:=STDERIV(F,ZS,BS);
	RDERIV:=C*DF*DG;
ENDFUNCTION;

FUNCTION FPRIMEINVPROC Z;
	VARIABLE MAPF NM;
	VARIABLE MAPF1 NM;
	VARIABLE MAPF10 NM 1;
	VARIABLE MAPF11 NM 1;
	VARIABLE MAPF12 NM;
	VARIABLE A 1;
	MAPF12:=ZPOINT0;
	MAPF:=RDERIV(Z);
	DAINT 1 MAPF MAPF1;
	MAPF10(1):=MAPF1;
	MI1 MAPF10 MAPF11 1 IER ORDER 1 NM;
	MAPF:=MAPF11(1)-CONS(MAPF11(1));
	MAPF12:=MAPF12+MAPF;
	MAPF12:=(MAPF12+P0(1))/2/P0(1);
	FPRIMEINVPROC:=MAPF12;
ENDFUNCTION;

FUNCTION ROTATEFOURIERAN AN BN PHI J;
	ROTATEFOURIERAN:=AN*COS(J*PHI)-BN*SIN(J*PHI);
ENDFUNCTION;

FUNCTION ROTATEFOURIERBN AN BN PHI J;
	ROTATEFOURIERBN:=AN*SIN(J*PHI)+BN*COS(J*PHI);
ENDFUNCTION;

FUNCTION SUPERIMPOSEFOURIERA0 A01 A02 A03 A04 V1 V2 V3 V4;
	SUPERIMPOSEFOURIERA0:=V1*A01+V2*A02+V3*A03+V4*A04;
ENDFUNCTION;

FUNCTION SUPERIMPOSEFOURIERAN AN1 BN1 AN2 BN2 AN3 BN3 AN4 BN4 V1 V2 V3 V4 J;
	SUPERIMPOSEFOURIERAN:=V1*AN1+V2*ROTATEFOURIERAN(AN2,BN2,PI/2,J)+V3*ROTATEFOURIERAN(AN3,BN3,PI,J)+V4*ROTATEFOURIERAN(AN4,BN4,3*PI/2,J);
ENDFUNCTION;

FUNCTION SUPERIMPOSEFOURIERBN AN1 BN1 AN2 BN2 AN3 BN3 AN4 BN4 V1 V2 V3 V4 J;
	SUPERIMPOSEFOURIERBN:=V1*BN1+V2*ROTATEFOURIERBN(AN2,BN2,PI/2,J)+V3*ROTATEFOURIERBN(AN3,BN3,PI,J)+V4*ROTATEFOURIERBN(AN4,BN4,3*PI/2,J);
ENDFUNCTION;

PROCEDURE MULTIPOLETERMS R Rref;
	VARIABLE J 1;
	OPENF 56 'mterms.txt' 'UNKNOWN';
	WRITE 6 'MULTIPOLE TERMS' 'SCALED TO R = '&S(R)&' cm';
	WRITE 56 'MULTIPOLE TERMS' 'SCALED TO R = '&S(R)&' cm';
	WRITE 6 'NOMINAL PLATE VOLTAGE PHI = '&S(V)&' V';
	WRITE 56 'NOMINAL PLATE VOLTAGE PHI = '&S(V)&' V';
	WRITE 6 'PLATE VOLTAGE COEFFICIENTS:';
	WRITE 56 'PLATE VOLTAGE COEFFICIENTS:';
	WRITE 6 'PLATE 1: V1 = '&S(V1);
	WRITE 56 'PLATE 1: V1 = '&S(V1);
	WRITE 6 'PLATE 2: V2 = '&S(V2);
	WRITE 56 'PLATE 2: V2 = '&S(V2);
	WRITE 6 'PLATE 3: V3 = '&S(V3);
	WRITE 56 'PLATE 3: V3 = '&S(V3);
	WRITE 6 'PLATE 4: V4 = '&S(V4);
	WRITE 56 'PLATE 4: V4 = '&S(V4);
	WRITE 6 'PLATE DISTANCE ERRORS:';
	WRITE 56 'PLATE DISTANCE ERRORS:';
	WRITE 6 'PLATE 1: D1 = '&S(D10)&' cm';
	WRITE 56 'PLATE 1: D1 = '&S(D10)&' cm';
	WRITE 6 'PLATE 2: D2 = '&S(D20)&' cm';
	WRITE 56 'PLATE 2: D2 = '&S(D20)&' cm';
	WRITE 6 'PLATE 3: D3 = '&S(D30)&' cm';
	WRITE 56 'PLATE 3: D3 = '&S(D30)&' cm';
	WRITE 6 'PLATE 4: D4 = '&S(D40)&' cm';
	WRITE 56 'PLATE 4: D4 = '&S(D40)&' cm';
	WRITE 6 '';
	WRITE 56 '';
	WRITE 6 'A0 = ' V*SUPERIMPOSEFOURIERA0(A01,A02,A03,A04,V1,V2,V3,V4);
	WRITE 56 V*SUPERIMPOSEFOURIERA0(A01,A02,A03,A04,V1,V2,V3,V4);
	{WRITE 56 {'A0='&}S(A01){&';'};}
	WRITE 6 'AN = ';
	{WRITE 56 'AN=';}
	LOOP J 1 ORDER;
		WRITE 6 V*(R/Rref)^J*SUPERIMPOSEFOURIERAN(AN1(J),BN1(J),AN2(J),BN2(J),AN3(J),BN3(J),AN4(J),BN4(J),V1,V2,V3,V4,J);
		WRITE 56 V*(R/Rref)^J*SUPERIMPOSEFOURIERAN(AN1(J),BN1(J),AN2(J),BN2(J),AN3(J),BN3(J),AN4(J),BN4(J),V1,V2,V3,V4,J);
		{WRITE 56 {'AN('&SI(J)&')='&}S(AN1(J)){&';'};}
	ENDLOOP;
	WRITE 6 'BN = ';
	{WRITE 56 'BN=';}
	LOOP J 1 ORDER;
		WRITE 6 V*(R/Rref)^J*SUPERIMPOSEFOURIERBN(AN1(J),BN1(J),AN2(J),BN2(J),AN3(J),BN3(J),AN4(J),BN4(J),V1,V2,V3,V4,J);
		WRITE 56 V*(R/Rref)^J*SUPERIMPOSEFOURIERBN(AN1(J),BN1(J),AN2(J),BN2(J),AN3(J),BN3(J),AN4(J),BN4(J),V1,V2,V3,V4,J);
		{WRITE 56 {'BN('&SI(J)&')='&}S(BN1(J)){&';'};}
	ENDLOOP;
	CLOSEF 56;
ENDPROCEDURE;

PROCEDURE CONFMAPCOMP;
	NPOINTS:=LENGTH(ALPHA);
	POLYGONSTR(1):='p=polygon([ ...';
	LOOP J 1 NPOINTS-1;
		POLYGONSTR(J+1):=S(ZXI|J)&'+('&S(ZYI|J)&'i), ...';
	ENDLOOP;
	J:=NPOINTS;
	POLYGONSTR(J+1):=S(ZXI|J)&'+('&S(ZYI|J)&'i)], [ ...';
	LOOP J 1 NPOINTS-1;
		POLYGONSTR(J+NPOINTS+1):=S(ALPHA|J)&', ...';
	ENDLOOP;
	J:=NPOINTS;
	POLYGONSTR(J+NPOINTS+1):=S(ALPHA|J)&']);';
	OPENF 55 'vertices.m' 'UNKNOWN';
    WRITE 55 'function [p,f]=vertices';
    WRITE 55 'options=scmapopt(''Tolerance'',1e-16);';
    LOOP J 1 2*NPOINTS+1;
    	WRITE 55 POLYGONSTR(J);
    ENDLOOP;
    WRITE 55 'f=rectmap(p,[1,6,7,56], options);';
    WRITE 55 'plot(f);';
    WRITE 55 'print(''quadplot'&SI(IMGINDX)&''',''-dpdf'');';
    WRITE 55 'z=parameters(f);';
    WRITE 55 'fileID=fopen(''mapdata.txt'',''w'');';
    WRITE 55 'zpoint0=evalinv(f,0);';
    WRITE 55 'fprintf(fileID,''%24.16e\n'',real(zpoint0));';
    WRITE 55 'fprintf(fileID,''%24.16e\n'',imag(zpoint0));';
    WRITE 55 'fprintf(fileID,''%24.16e\n'',real(z.constant));';
    WRITE 55 'fprintf(fileID,''%24.16e\n'',imag(z.constant));';
    WRITE 55 'fprintf(fileID,''%24.16e\n'',z.stripL);';
    WRITE 55 'fprintf(fileID,''%i\n'',length(z.prevertex));';
    WRITE 55 'fprintf(fileID,''%24.16e\n'',real(z.prevertex));';
    WRITE 55 'fprintf(fileID,''%24.16e\n'',imag(z.prevertex));';
    WRITE 55 'exit';
    WRITE 55 'end';
    CLOSEF 55;
	WRITE 6 'WAITING FOR MATLAB TO COMPUTE CONFORMAL MAP PARAMETERS, SET '&SI(IMGINDX)&'...';
	OS 'matlab -nosplash -nodesktop -minimize -r vertices';
	WRITE 6 '';
	IMGINDX:=IMGINDX+1;
ENDPROCEDURE;

PROCEDURE CONFMAPDATA;
	VARIABLE TMP 1; VARIABLE J 1;
	OPENF 55 'mapdata.txt' 'OLD';
	READ 55 ZPOINT0; READ 55 TMP; ZPOINT0:=CM(ZPOINT0&TMP);
    READ 55 C; READ 55 TMP; C:=CM(C&TMP);
    READ 55 L;
    READ 55 NPOINTS; NPOINTS:=INT(NPOINTS);
    LOOP J 1 NPOINTS; READ 55 TMP; P0(J):=TMP; ENDLOOP;
    LOOP J 1 NPOINTS; READ 55 TMP; P1(J):=TMP; ENDLOOP;
    CLOSEF 55;
ENDPROCEDURE;

PROCEDURE GEOMDATA D1 D2 D3 D4;
	{Geometry data.
	The x- and y-coordinates of the polygonal model are stored in the
	vectors ZXI and ZYI, respectively. The interior angles of the polygon,
	divided by Pi, are stored in the vector ALPHA.
	The x- and y-coordinates of the polygonal model are stored in the COSY
	INFINITY vectors ZXI and ZYI, respectively. The interior angles of the
	polygon, divided by Pi, are stored in the vector ALPHA.
	The parameters D1, D2, D3, and D4 denote the errors in distances from the
	origin to the plates. The sequence of the plates and the respective errors
	starts from the left plate on the cross section drawing and proceeds in
	counter-clockwise order.}
	ZXI:=-5.25&-5.25&(-5-D1)&(-5-D1)&-5.25&-5.25&-7;
	ZXI:=ZXI&-7&-5.25&-4.125&-3.875&-5&-5&-0.25&-0.25&-2.35&-2.35&2.35;
	ZXI:=ZXI&2.35&0.25&0.25&5&5&3.875&4.125&5.25&7&7&5.25&5.25&(5+D3)&(5+D3);
	ZXI:=ZXI&5.25&5.25&7&7&5.25&4.125&3.875&5&5&0.25&0.25&2.35&2.35;
	ZXI:=ZXI&-2.35&-2.35&-0.25&-0.25&-5&-5&-3.875&-4.125&-5.25&-7&-7;
	ZYI:=0.25&2.35&2.35&-2.35&-2.35&-0.25&-0.25;
	ZYI:=ZYI&-5&-5&-3.875&-4.125&-5.25&-7&-7&-5.25&-5.25&(-5-D2)&(-5-D2)&-5.25;
	ZYI:=ZYI&-5.25&-7&-7&-5.25&-4.125&-3.875&-5&-5&-0.25&-0.25&-2.35;
	ZYI:=ZYI&-2.35&2.35&2.35&0.25&0.25&5&5&3.875&4.125&5.25&7&7&5.25;
	ZYI:=ZYI&5.25&(5+D4)&(5+D4)&5.25&5.25&7&7&5.25&4.125&3.875&5&5&0.25;
	ALPHA:=0.5&1.5&1.5&1.5&1.5&0.5&0.5&0.5&0.75&1.5&1.5&0.75&0.5&0.5&0.5;
	ALPHA:=ALPHA&1.5&1.5&1.5&1.5&0.5&0.5&0.5&0.75&1.5&1.5&0.75&0.5&0.5&0.5;
	ALPHA:=ALPHA&1.5&1.5&1.5&1.5&0.5&0.5&0.5&0.75;
	ALPHA:=ALPHA&1.5&1.5&0.75&0.5&0.5&0.5&1.5&1.5&1.5&1.5;
	ALPHA:=ALPHA&0.5&0.5&0.5&0.75&1.5&1.5&0.75&0.5&0.5;
ENDPROCEDURE;

PROCEDURE NOMINALCOEFF A0 AN BN;
	A0:= 0.3960514667124162002664889;
	AN(1):=-0.6885669997872999326116172E-01;
	AN(2):= 0.1038549923778346421865404E-01;
	AN(3):=-0.1297913346966461569514939E-02;
	AN(4):= 0.1147644547501454185579883E-03;
	AN(5):=-0.8616667865527831779307380E-05;
	AN(6):=-0.8001982661547007625552443E-07;
	AN(7):= 0.2082467167685008440847151E-06;
	AN(8):=-0.5650578854280667308819636E-07;
	AN(9):= 0.9493137805299051641279443E-08;
	AN(10):=-0.1178399055617841478965939E-08;
	AN(11):= 0.8674995375714368533264641E-10;
	AN(12):= 0.4744035300963714852169690E-11;
	AN(13):=-0.2078593716783584744931825E-11;
	AN(14):= 0.4148146248054382449300898E-12;
	AN(15):=-0.6336771062740538231062328E-13;
	AN(16):= 0.8490681557639771424240070E-14;
	AN(17):=-0.1872421797230359291328962E-14;
	AN(18):= 0.3426453476938451690633081E-15;
	AN(19):=-0.4796463381145525802394053E-16;
	AN(20):= 0.3673070349668451197684033E-17;
	AN(21):= 0.6047013893814340323967724E-18;
	AN(22):=-0.2935711731503183201970729E-18;
	AN(23):= 0.7048405345513463674564302E-19;
	AN(24):= 0.0000000000000000000000000E+00;
	AN(25):= 0.0000000000000000000000000E+00;
	BN(1):= 0.7766948107121075687303587E-10;
	BN(2):= 0.9084503808574815186009811E-09;
	BN(3):=-0.2740709784014760385675795E-09;
	BN(4):= 0.3211767800415641958410902E-10;
	BN(5):= 0.1212772388378897834820223E-11;
	BN(6):=-0.1566030408821507397282051E-11;
	BN(7):= 0.4348995470313623648896982E-12;
	BN(8):=-0.7724423871624272621235177E-13;
	BN(9):= 0.7215556636694773644521280E-14;
	BN(10):= 0.7337986574181112655162078E-15;
	BN(11):=-0.5034212659015152446443716E-15;
	BN(12):= 0.1296636147404973131491258E-15;
	BN(13):=-0.2062294257995577350069950E-16;
	BN(14):= 0.1665197708903231252482612E-17;
	BN(15):= 0.1802161180397575394110535E-18;
	BN(16):=-0.1036746736978828970543980E-18;
	BN(17):= 0.2483145366298546087471422E-19;
	BN(18):= 0.0000000000000000000000000E+00;
	BN(19):= 0.0000000000000000000000000E+00;
	BN(20):= 0.0000000000000000000000000E+00;
	BN(21):= 0.0000000000000000000000000E+00;
	BN(22):= 0.0000000000000000000000000E+00;
	BN(23):= 0.0000000000000000000000000E+00;
	BN(24):= 0.0000000000000000000000000E+00;
	BN(25):= 0.0000000000000000000000000E+00;
ENDPROCEDURE;

PROCEDURE PERTURBCOEFF1 D1 A0 AN BN;
	VARIABLE DA0 1;
	VARIABLE DAN 1 100;
	VARIABLE DBN 1 100;
	VARIABLE J 1;
	DA0:=-0.1444884897365176;
	DAN(1):=0.024848403415070462;
	DAN(2):=-0.0035964314565587524;
	DAN(3):=0.0003975167425589697;
	DAN(4):=-0.000019027837440425757;
	DAN(5):=-2.6389842208771386e-6;
	DAN(6):=1.3200429446831776e-6;
	DAN(7):=-3.336076829265742e-7;
	DAN(8):=6.623339431143421e-8;
	DAN(9):=-1.041062666661125e-8;
	DAN(10):=1.2617566878151998e-9;
	DAN(11):=-8.210887578907022e-11;
	DAN(12):=-1.1765160099419854e-11;
	DAN(13):=5.596411607742279e-12;
	DAN(14):=-1.3920004680873368e-12;
	DAN(15):=2.6920021350544594e-13;
	DAN(16):=-4.29932669278841e-14;
	DAN(17):=5.745154992880337e-15;
	DAN(18):=-4.983850750279471e-16;
	DAN(19):=-2.0577218923151605e-17;
	DAN(20):=2.2283046912641997e-17;
	DAN(21):=-6.547768415309331e-18;
	DAN(22):=1.3884321371806001e-18;
	DAN(23):=-2.376780998696832e-19;
	DAN(24):=0.;
	DAN(25):=0.;
	DBN(1):=3.5484213725721443e-6;
	DBN(2):=0.000036014360182936215;
	DBN(3):=-0.000010881035411630925;
	DBN(4):=1.2753318430030797e-6;
	DBN(5):=4.819410386204099e-8;
	DBN(6):=-6.220211484910526e-8;
	DBN(7):=1.727264556597449e-8;
	DBN(8):=-3.0676944205138244e-9;
	DBN(9):=2.8646167242545424e-10;
	DBN(10):=2.9186368392854654e-11;
	DBN(11):=-2.000518511207103e-11;
	DBN(12):=5.152243236370143e-12;
	DBN(13):=-8.194149177053863e-13;
	DBN(14):=6.614926637530062e-14;
	DBN(15):=7.16612976746983e-15;
	DBN(16):=-4.121119580780476e-15;
	DBN(17):=9.87224257084664e-16;
	DBN(18):=0.;
	DBN(19):=0.;
	DBN(20):=0.;
	DBN(21):=0.;
	DBN(22):=0.;
	DBN(23):=0.;
	DBN(24):=0.;
	DBN(25):=0.;
	A0:=A0+D1*DA0;
	LOOP J 1 ORDER;
		AN(J):=AN(J)+D1*DAN(J);
		BN(J):=BN(J)+D1*DBN(J);
	ENDLOOP;
ENDPROCEDURE;

PROCEDURE PERTURBCOEFF2 D2 A0 AN BN;
	VARIABLE DA0 1;
	VARIABLE DAN 1 100;
	VARIABLE DBN 1 100;
	VARIABLE J 1;
	DA0:=0.02463158081389416;
	DAN(1):=-0.0006531514532004401;
	DAN(2):=-0.0006519016577943848;
	DAN(3):=0.000050219855279518;
	DAN(4):=7.308752762074169e-6;
	DAN(5):=-1.4847818318198809e-6;
	DAN(6):=2.7373194983682978e-8;
	DAN(7):=2.575921941229351e-8;
	DAN(8):=-5.371460655667032e-9;
	DAN(9):=-2.0187850804427197e-11;
	DAN(10):=1.3699349709711163e-10;
	DAN(11):=-1.4367069594248677e-11;
	DAN(12):=-4.480616938928591e-13;
	DAN(13):=4.389622545399623e-13;
	DAN(14):=-6.026734883546398e-14;
	DAN(15):=-5.3789105734122435e-15;
	DAN(16):=2.5287025520619607e-15;
	DAN(17):=-1.440333425607398e-16;
	DAN(18):=-5.852426774904934e-17;
	DAN(19):=1.0732657190214119e-17;
	DAN(20):=-3.371932262158921e-19;
	DAN(21):=-2.696899131755618e-19;
	DAN(22):=7.290960456984063e-20;
	DAN(23):=1.5465718628549282e-22;
	DAN(24):=0.;
	DAN(25):=0.;
	DBN(1):=0.004291141557968972;
	DBN(2):=-0.00018121709368299234;
	DBN(3):=-0.00009307793575405624;
	DBN(4):=0.000010575970230850742;
	DBN(5):=5.56435100630618e-7;
	DBN(6):=-2.7373406889299316e-7;
	DBN(7):=3.7729278212684966e-8;
	DBN(8):=-7.810016388882003e-10;
	DBN(9):=-6.805548960513614e-10;
	DBN(10):=7.860964185613506e-11;
	DBN(11):=-5.91594881675488e-12;
	DBN(12):=2.3337007215824654e-12;
	DBN(13):=-6.514714236739883e-13;
	DBN(14):=1.2302360401338842e-13;
	DBN(15):=-6.670448858970904e-15;
	DBN(16):=-4.141239834729562e-15;
	DBN(17):=1.3793259742916664e-15;
	DBN(18):=0.;
	DBN(19):=0.;
	DBN(20):=0.;
	DBN(21):=0.;
	DBN(22):=0.;
	DBN(23):=0.;
	DBN(24):=0.;
	DBN(25):=0.;
	A0:=A0+D2*DA0;
	LOOP J 1 ORDER;
		AN(J):=AN(J)+D2*DAN(J);
		BN(J):=BN(J)+D2*DBN(J);
	ENDLOOP;
ENDPROCEDURE;

PROCEDURE PERTURBCOEFF3 D3 A0 AN BN;
	VARIABLE DA0 1;
	VARIABLE DAN 1 100;
	VARIABLE DBN 1 100;
	VARIABLE J 1;
	DA0:=0.009376974330997085;
	DAN(1):=0.0016466903355588974;
	DAN(2):=0.00025673876508554755;
	DAN(3):=0.000034633068178518805;
	DAN(4):=3.699119998049537e-6;
	DAN(5):=4.0035108069670176e-7;
	DAN(6):=3.1135075378037185e-8;
	DAN(7):=-3.4013761560371777e-10;
	DAN(8):=-8.329064640595302e-10;
	DAN(9):=-1.9072194257427367e-10;
	DAN(10):=-3.0553601098349e-11;
	DAN(11):=-3.256616872039333e-12;
	DAN(12):=-1.1364648285565948e-13;
	DAN(13):=2.8168736314034743e-14;
	DAN(14):=1.2258346799565113e-14;
	DAN(15):=2.6975760287450926e-15;
	DAN(16):=5.295885854313568e-16;
	DAN(17):=9.992654208203225e-17;
	DAN(18):=1.483293712681986e-17;
	DAN(19):=1.590520323241747e-18;
	DAN(20):=-2.018229056940692e-20;
	DAN(21):=-5.522461977746537e-20;
	DAN(22):=-1.7833523207981785e-20;
	DAN(23):=-3.607909453318381e-21;
	DAN(24):=0.;
	DAN(25):=0.;
	DBN(1):=2.6012561396628937e-6;
	DBN(2):=-3.264427228831575e-7;
	DBN(3):=1.6219024479853696e-8;
	DBN(4):=-9.301485458960886e-11;
	DBN(5):=4.875609189517354e-11;
	DBN(6):=-3.020687618033502e-11;
	DBN(7):=-2.008207049699983e-12;
	DBN(8):=8.618373852593456e-13;
	DBN(9):=-5.025368408773574e-13;
	DBN(10):=1.7929831598457703e-13;
	DBN(11):=-4.6486252361772815e-14;
	DBN(12):=9.821321480592008e-15;
	DBN(13):=-1.6317932526659849e-15;
	DBN(14):=8.621596651502531e-17;
	DBN(15):=3.3157898412483947e-17;
	DBN(16):=-1.2810764392090319e-17;
	DBN(17):=3.821237355640557e-18;
	DBN(18):=0.;
	DBN(19):=0.;
	DBN(20):=0.;
	DBN(21):=0.;
	DBN(22):=0.;
	DBN(23):=0.;
	DBN(24):=0.;
	DBN(25):=0.;
	A0:=A0+D3*DA0;
	LOOP J 1 ORDER;
		AN(J):=AN(J)+D3*DAN(J);
		BN(J):=BN(J)+D3*DBN(J);
	ENDLOOP;
ENDPROCEDURE;

PROCEDURE PERTURBCOEFF4 D4 A0 AN BN;
	VARIABLE DA0 1;
	VARIABLE DAN 1 100;
	VARIABLE DBN 1 100;
	VARIABLE J 1;
	DA0:=0.02463156389964638;
	DAN(1):=-0.0006572106163680683;
	DAN(2):=-0.0006509517704236568;
	DAN(3):=0.00005008041481332758;
	DAN(4):=7.311960481097025e-6;
	DAN(5):=-1.4832042664218915e-6;
	DAN(6):=2.686993667956254e-8;
	DAN(7):=2.582815475252795e-8;
	DAN(8):=-5.375006788041004e-9;
	DAN(9):=-2.216645711303911e-11;
	DAN(10):=1.3763870154246403e-10;
	DAN(11):=-1.447182447679387e-11;
	DAN(12):=-4.4261541328000695e-13;
	DAN(13):=4.424264496060864e-13;
	DAN(14):=-6.138744911938371e-14;
	DAN(15):=-5.159127712706641e-15;
	DAN(16):=2.5039160264365163e-15;
	DAN(17):=-1.4456449599913898e-16;
	DAN(18):=-5.772285926076793e-17;
	DAN(19):=1.0509489396965041e-17;
	DAN(20):=-2.984829601057637e-19;
	DAN(21):=-2.7466074284149757e-19;
	DAN(22):=7.314845072502751e-20;
	DAN(23):=1.5397501179808952e-22;
	DAN(24):=0.;
	DAN(25):=0.;
	DBN(1):=-0.0042923438435735;
	DBN(2):=0.00021791378621024795;
	DBN(3):=0.00008211499671272027;
	DBN(4):=-9.294389673533813e-6;
	DBN(5):=-5.079774526104112e-7;
	DBN(6):=2.1139313062627526e-7;
	DBN(7):=-2.0388970595219676e-8;
	DBN(8):=-2.29940758712421e-9;
	DBN(9):=9.6889886221242e-10;
	DBN(10):=-4.9679879227888535e-11;
	DBN(11):=-1.406671943084948e-11;
	DBN(12):=2.8163816961828453e-12;
	DBN(13):=-1.677183835725091e-13;
	DBN(14):=-5.678868964822446e-14;
	DBN(15):=1.3795447987588035e-14;
	DBN(16):=3.2602077248549906e-17;
	DBN(17):=-3.9333149423065704e-16;
	DBN(18):=0.;
	DBN(19):=0.;
	DBN(20):=0.;
	DBN(21):=0.;
	DBN(22):=0.;
	DBN(23):=0.;
	DBN(24):=0.;
	DBN(25):=0.;
	A0:=A0+D4*DA0;
	LOOP J 1 ORDER;
		AN(J):=AN(J)+D4*DAN(J);
		BN(J):=BN(J)+D4*DBN(J);
	ENDLOOP;
ENDPROCEDURE;

PROCEDURE PERTURBCOEFF1A D1 A0 AN BN;
	VARIABLE DA0 1;
	VARIABLE DAN 1 100;
	VARIABLE DBN 1 100;
	VARIABLE J 1;
	DA0:=-0.1457272552503937;
	DAN(1):=0.025058962293321888;
	DAN(2):=-0.0036216136671772424;
	DAN(3):=0.0003985949190492816;
	DAN(4):=-0.000018419993360822243;
	DAN(5):=-2.8664175790197326e-6;
	DAN(6):=1.3787075675833576e-6;
	DAN(7):=-3.458854290082477e-7;
	DAN(8):=6.838622220065129e-8;
	DAN(9):=-1.0703797221547866e-8;
	DAN(10):=1.2843096263238308e-9;
	DAN(11):=-7.923827347064175e-11;
	DAN(12):=-1.3559545945705499e-11;
	DAN(13):=6.099638567443595e-12;
	DAN(14):=-1.4996276738563107e-12;
	DAN(15):=2.8788614920481876e-13;
	DAN(16):=-4.554121712341895e-14;
	DAN(17):=5.957119298892319e-15;
	DAN(18):=-4.809799256796403e-16;
	DAN(19):=-3.362653182396087e-17;
	DAN(20):=2.605121449114396e-17;
	DAN(21):=-7.359761543042948e-18;
	DAN(22):=1.5305597039056104e-18;
	DAN(23):=-2.5754173236529335e-19;
	DAN(24):=0.;
	DAN(25):=0.;
	DBN(1):=2.458682462646829e-9;
	DBN(2):=4.122710183712213e-8;
	DBN(3):=-1.2323836864824485e-8;
	DBN(4):=1.4081242705799559e-9;
	DBN(5):=6.823121238914533e-11;
	DBN(6):=-7.347556262436924e-11;
	DBN(7):=1.9973997528413176e-11;
	DBN(8):=-3.4773837646727866e-12;
	DBN(9):=3.065834101124757e-13;
	DBN(10):=3.942083825263193e-14;
	DBN(11):=-2.408392142215011e-14;
	DBN(12):=6.055270081822473e-15;
	DBN(13):=-9.443113231016931e-16;
	DBN(14):=7.179758323192199e-17;
	DBN(15):=9.733684996243084e-18;
	DBN(16):=-5.076093940229622e-18;
	DBN(17):=1.1479052383101426e-18;
	DBN(18):=0.;
	DBN(19):=0.;
	DBN(20):=0.;
	DBN(21):=0.;
	DBN(22):=0.;
	DBN(23):=0.;
	DBN(24):=0.;
	DBN(25):=0.;
	A0:=A0+D1*DA0;
	LOOP J 1 ORDER;
		AN(J):=AN(J)+D1*DAN(J);
		BN(J):=BN(J)+D1*DBN(J);
	ENDLOOP;
ENDPROCEDURE;

PROCEDURE PERTURBCOEFF2A D2 A0 AN BN;
	VARIABLE DA0 1;
	VARIABLE DAN 1 100;
	VARIABLE DBN 1 100;
	VARIABLE J 1;
	DA0:=0.025060395967371016;
	DAN(1):=-0.0006775690471413472;
	DAN(2):=-0.0006618391253027938;
	DAN(3):=0.00005195106628073963;
	DAN(4):=7.348217955337336e-6;
	DAN(5):=-1.5369031461450678e-6;
	DAN(6):=3.2883674344008985e-8;
	DAN(7):=2.6547600828730453e-8;
	DAN(8):=-5.667104170575023e-9;
	DAN(9):=-6.739759238787533e-12;
	DAN(10):=1.4399862883772376e-10;
	DAN(11):=-1.5715953490553942e-11;
	DAN(12):=-4.035898584304069e-13;
	DAN(13):=4.74392480381199e-13;
	DAN(14):=-6.891464453450467e-14;
	DAN(15):=-5.248139044132027e-15;
	DAN(16):=2.766403270740668e-15;
	DAN(17):=-1.7354796392027693e-16;
	DAN(18):=-6.041314261014754e-17;
	DAN(19):=1.1837265214714574e-17;
	DAN(20):=-4.93772131097328e-19;
	DAN(21):=-2.934010450195449e-19;
	DAN(22):=8.345103485350077e-20;
	DAN(23):=-2.847190636774604e-21;
	DAN(24):=0.;
	DAN(25):=0.;
	DBN(1):=0.0043650738374104905;
	DBN(2):=-0.00022559666117456616;
	DBN(3):=-0.0000832902281804432;
	DBN(4):=9.633654058863035e-6;
	DBN(5):=4.939493162234669e-7;
	DBN(6):=-2.1868670127496532e-7;
	DBN(7):=2.187743137922035e-8;
	DBN(8):=2.3179617932478374e-9;
	DBN(9):=-1.0177398769286442e-9;
	DBN(10):=5.517859986933493e-11;
	DBN(11):=1.4571596638224842e-11;
	DBN(12):=-3.0422767013762354e-12;
	DBN(13):=1.956519017630693e-13;
	DBN(14):=6.016064771140062e-14;
	DBN(15):=-1.5369222209310357e-14;
	DBN(16):=5.63619872837578e-17;
	DBN(17):=4.636705039041475e-16;
	DBN(18):=-5.396095500724012e-17;
	DBN(19):=-4.529856258450731e-18;
	DBN(20):=2.091322247545797e-18;
	DBN(21):=-3.1423605008315452e-19;
	DBN(22):=0.;
	DBN(23):=0.;
	DBN(24):=0.;
	DBN(25):=0.;
	A0:=A0+D2*DA0;
	LOOP J 1 ORDER;
		AN(J):=AN(J)+D2*DAN(J);
		BN(J):=BN(J)+D2*DBN(J);
	ENDLOOP;
ENDPROCEDURE;

PROCEDURE PERTURBCOEFF3A D3 A0 AN BN;
	VARIABLE DA0 1;
	VARIABLE DAN 1 100;
	VARIABLE DBN 1 100;
	VARIABLE J 1;
	DA0:=0.009548496031278796;
	DAN(1):=0.0016770404846455974;
	DAN(2):=0.00026173044310100354;
	DAN(3):=0.00003524714682180259;
	DAN(4):=3.7643459897942128e-6;
	DAN(5):=4.071782568154258e-7;
	DAN(6):=3.11646690771534e-8;
	DAN(7):=-4.616755510811803e-10;
	DAN(8):=-8.753740149826735e-10;
	DAN(9):=-2.0113273114700984e-10;
	DAN(10):=-3.1731113201072446e-11;
	DAN(11):=-3.4367892018877363e-12;
	DAN(12):=-1.1169497565452525e-13;
	DAN(13):=3.423545811063755e-14;
	DAN(14):=1.3349703419899022e-14;
	DAN(15):=3.109920173393132e-15;
	DAN(16):=5.788759189713213e-16;
	DAN(17):=1.0835295647440067e-16;
	DAN(18):=1.575566715062825e-17;
	DAN(19):=1.4744771340578975e-18;
	DAN(20):=-4.9807092849941733e-20;
	DAN(21):=-6.855885639528529e-20;
	DAN(22):=-1.9941803059582818e-20;
	DAN(23):=-4.114850991743237e-21;
	DAN(24):=0.;
	DAN(25):=0.;
	DBN(1):=3.1140672114118686e-9;
	DBN(2):=3.580950931670901e-8;
	DBN(3):=-1.0822905007854383e-8;
	DBN(4):=1.2678035237342517e-9;
	DBN(5):=4.7735456411632953e-11;
	DBN(6):=-6.180586985150435e-11;
	DBN(7):=1.716773341402954e-11;
	DBN(8):=-3.0486875681100898e-12;
	DBN(9):=2.849935298280351e-13;
	DBN(10):=2.896032635788505e-14;
	DBN(11):=-1.986865616408386e-14;
	DBN(12):=5.1179977468044865e-15;
	DBN(13):=-8.141750085177042e-16;
	DBN(14):=6.573535127358991e-17;
	DBN(15):=7.108915419311386e-18;
	DBN(16):=-4.092757581344812e-18;
	DBN(17):=9.810944083125955e-19;
	DBN(18):=0.;
	DBN(19):=0.;
	DBN(20):=0.;
	DBN(21):=0.;
	DBN(22):=0.;
	DBN(23):=0.;
	DBN(24):=0.;
	DBN(25):=0.;
	A0:=A0+D3*DA0;
	LOOP J 1 ORDER;
		AN(J):=AN(J)+D3*DAN(J);
		BN(J):=BN(J)+D3*DBN(J);
	ENDLOOP;
ENDPROCEDURE;

PROCEDURE PERTURBCOEFF4A D4 A0 AN BN;
	VARIABLE DA0 1;
	VARIABLE DAN 1 100;
	VARIABLE DBN 1 100;
	VARIABLE J 1;
	DA0:=0.02505866454260162;
	DAN(1):=-0.0006774773811872156;
	DAN(2):=-0.0006617956104238433;
	DAN(3):=0.00005194354175871661;
	DAN(4):=7.348070711815851e-6;
	DAN(5):=-1.5366845359919812e-6;
	DAN(6):=3.2858864063397094e-8;
	DAN(7):=2.6544650645384847e-8;
	DAN(8):=-5.6658733731025145e-9;
	DAN(9):=-6.808028351692973e-12;
	DAN(10):=1.4397277500963983e-10;
	DAN(11):=-1.5710710175967928e-11;
	DAN(12):=-4.037845543696048e-13;
	DAN(13):=4.742595354582833e-13;
	DAN(14):=-6.88826082586793e-14;
	DAN(15):=-5.247899155033276e-15;
	DAN(16):=2.7653042987173924e-15;
	DAN(17):=-1.7341889009054158e-16;
	DAN(18):=-6.040299726399774e-17;
	DAN(19):=1.1831706071969522e-17;
	DAN(20):=-4.92934253389038e-19;
	DAN(21):=-2.933245160238922e-19;
	DAN(22):=8.34069733663988e-20;
	DAN(23):=-2.8350566842353065e-21;
	DAN(24):=0.;
	DAN(25):=0.;
	DBN(1):=-0.004364775030495345;
	DBN(2):=0.00022560111332316007;
	DBN(3):=0.0000832746653663982;
	DBN(4):=-9.630993654876922e-6;
	DBN(5):=-4.939617210603819e-7;
	DBN(6):=2.185948164167743e-7;
	DBN(7):=-2.185397583790867e-8;
	DBN(8):=-2.3209680041871112e-9;
	DBN(9):=1.0178248790803358e-9;
	DBN(10):=-5.5126046478537904e-11;
	DBN(11):=-1.4589651164852528e-11;
	DBN(12):=3.0464912533383327e-12;
	DBN(13):=-1.963514079507876e-13;
	DBN(14):=-6.008075461695642e-14;
	DBN(15):=1.5369755573803152e-14;
	DBN(16):=-6.009295942192694e-17;
	DBN(17):=-4.625433434493541e-16;
	DBN(18):=5.3932139614145475e-17;
	DBN(19):=4.531268563229571e-18;
	DBN(20):=-2.0905299724228477e-18;
	DBN(21):=3.1401983752181606e-19;
	DBN(22):=0.;
	DBN(23):=0.;
	DBN(24):=0.;
	DBN(25):=0.;
	A0:=A0+D4*DA0;
	LOOP J 1 ORDER;
		AN(J):=AN(J)+D4*DAN(J);
		BN(J):=BN(J)+D4*DBN(J);
	ENDLOOP;
ENDPROCEDURE;

PROCEDURE CALCSET D1 D2 D3 D4 A0 AN BN;
	VARIABLE MAPF NM;
	IF CALCMODE=1;
		IF CALCDONE=0;
			GEOMDATA 0 0 0 0;
			CONFMAPCOMP;
			CONFMAPDATA;
			ZX:=P0(1); LOOP J 2 NPOINTS; ZX:=ZX&P0(J); ENDLOOP;
			ZY:=P1(1); LOOP J 2 NPOINTS; ZY:=ZY&P1(J); ENDLOOP;
			LOOP J 1 NPOINTS; Z(J):=CM(ZX|J&ZY|J); ENDLOOP;
			MPAR:=EXP(-2*PI*L);
			KP:=VMAX(ZY);
			MAPF0:=FPRIMEINVPROC(ZPOINT0+DA(1));
			CALCDONE:=1;
		ENDIF;
		MAPF:=MAPF0;
		A0:=2*REAL(CONS(MAPF));
		LOOP J 1 ORDER;
			MAPF:=DER(1,MAPF)/J;
			AN(J):=REAL(CONS(MAPF));
			BN(J):=IMAG(CONS(MAPF));
		ENDLOOP;
	ELSEIF 1=1;
		NOMINALCOEFF A0 AN BN;
	ENDIF;
	PERTURBCOEFF1A D1 A0 AN BN;
	PERTURBCOEFF2A D2 A0 AN BN;
	PERTURBCOEFF3A D3 A0 AN BN;
	PERTURBCOEFF4A D4 A0 AN BN;
ENDPROCEDURE;

ORDER:=25;
DAINI ORDER 2 0 NM;

IMUNIT I;
PI := 3.1415926535897932384626433832795028842 ;

V:=24000; R:=4.5; Rref:=1.0;
V1:=1; V2:=-1; V3:=1; V4:=-1;
D10:=0; D20:=0; D30:=0; D40:=0;
IMGINDX:=1;
CALCDONE:=0;

WRITE 6 '----------------------------------------------------------';
WRITE 6 '      MTERMS: MULTIPOLE TERMS CALCULATION FOR THE         ';
WRITE 6 '    MUON (g-2) STORAGE RING HIGH VOLTAGE QUADRUPOLE       ';
WRITE 6 '                 E. VALETOV & M. BERZ                     ';
WRITE 6 '               MUON (g-2) COLLABORATION                   ';
WRITE 6 '                  CREATED 03-FEB-2017                     ';
WRITE 6 '                EMAIL: VALETOVE@MSU.EDU                   ';
WRITE 6 '----------------------------------------------------------';

WRITE 6 '' 'REQUIREMENTS: MATLAB, SC TOOLBOX (http://www.math.udel.edu/~driscoll/SC/).';
WRITE 6 '' 'PLATES ARE NUMBERED COUNTER-CLOCKWISE, STARTING FROM THE LEFT PLATE.';
WRITE 6 'DEFAULT ERRORS IN DISTANCES FROM ORIGIN TO PLATES ARE 0, 0, 0, 0 [cm].';
{WRITE 6 'IF YOU SIGNIFICANTLY CHANGE THE DISTANCE ERROR VALUES, CHECK THE';
WRITE 6 'PLOTS IN THE FILE(S) "quadplot?.pdf" AFTER THE CALCULATIONS.';}
WRITE 6 'ENTER 1 TO CHANGE THE VALUES OF THE PLATE DISTANCE ERRORS.';
WRITE 6 'ENTER 0 OR <CR> TO KEEP THE DEFAULT VALUE.';
WRITE 6 '[0/1]';
READ 5 INPUTCHAR;
IF INPUTCHAR#0;
	INPUTCHAR:=0;
	WRITE 6 'ENTER THE 1ST PLATE DISTANCE ERROR D1.';
	READ 5 INPUTCHAR; D10:=INPUTCHAR;
	INPUTCHAR:=0;
	WRITE 6 'ENTER THE 2ND PLATE DISTANCE ERROR D2.';
	READ 5 INPUTCHAR; D20:=INPUTCHAR;
	INPUTCHAR:=0;
	WRITE 6 'ENTER THE 3RD PLATE DISTANCE ERROR D3.';
	READ 5 INPUTCHAR; D30:=INPUTCHAR;
	INPUTCHAR:=0;
	WRITE 6 'ENTER THE 4TH PLATE DISTANCE ERROR D4.';
	READ 5 INPUTCHAR; D40:=INPUTCHAR;
ENDIF;
{V4:=-1-1e-2;}
INPUTCHAR:=0;
WRITE 6 'ENTER 1 FOR A NEW CALCULATION OF NOMINAL MULTIPOLE TERMS USING MATLAB AND DA.';
WRITE 6 'ENTER 0 OR <CR> TO USE PRE-CALCULATED SETS OF MULTIPOLE TERMS.';
WRITE 6 '[0/1]';
CALCMODE:=0;
READ 5 INPUTCHAR; IF INPUTCHAR#0; CALCMODE:=1; ENDIF; INPUTCHAR:=0;
IF (D10=D20)*(D20=D30)*(D30=D40);
	CALCSET D10 D10 D10 D10 A0 AN BN;
	A01:=A0; A02:=A0; A03:=A0; A04:=A0; 
	LOOP J 1 ORDER; 
		AN1(J):=AN(J); AN2(J):=AN(J); AN3(J):=AN(J); AN4(J):=AN(J);
		BN1(J):=BN(J); BN2(J):=BN(J); BN3(J):=BN(J); BN4(J):=BN(J);
	ENDLOOP;
ELSEIF 1=1;
	CALCSET D10 D20 D30 D40 A01 AN1 BN1;
	CALCSET D20 D30 D40 D10 A02 AN2 BN2;
	CALCSET D30 D40 D10 D20 A03 AN3 BN3;
	CALCSET D40 D10 D20 D30 A04 AN4 BN4;
ENDIF;
WRITE 6 'DEFAULT NOMINAL PLATE VOLTAGE MAGNITUDE IS PHI = 24000 V.';
WRITE 6 'ENTER A NEW VALUE OF PHI.';
WRITE 6 'TO KEEP THE DEFAULT VALUE OF PHI, ENTER 0 OR <CR>.';
WRITE 6 '[0/(Real number)]';
READ 5 INPUTCHAR; IF INPUTCHAR#0; V:=INPUTCHAR; ENDIF; INPUTCHAR:=0;
WRITE 6 'DEFAULT PLATE VOLTAGE COEFFICIENTS ARE 1, -1, 1, -1.';
WRITE 6 'PLATES ARE NUMBERED COUNTER-CLOCKWISE, STARTING FROM THE LEFT PLATE.';
WRITE 6 'ENTER 1 TO CHANGE THE VALUES OF THE PLATE VOLTAGE COEFFICIENTS.';
WRITE 6 'ENTER 0 OR <CR> TO KEEP THE DEFAULT VALUE.';
WRITE 6 '[0/1]';
READ 5 INPUTCHAR;
IF INPUTCHAR#0;
	INPUTCHAR:=0;
	WRITE 6 'ENTER THE 1ST PLATE VOLTAGE COEFFICIENT V1.';
	READ 5 INPUTCHAR; V1:=INPUTCHAR;
	INPUTCHAR:=0;
	WRITE 6 'ENTER THE 2ND PLATE VOLTAGE COEFFICIENT V2.';
	READ 5 INPUTCHAR; V2:=INPUTCHAR;
	INPUTCHAR:=0;
	WRITE 6 'ENTER THE 3RD PLATE VOLTAGE COEFFICIENT V3.';
	READ 5 INPUTCHAR; V3:=INPUTCHAR;
	INPUTCHAR:=0;
	WRITE 6 'ENTER THE 4TH PLATE VOLTAGE COEFFICIENT V4.';
	READ 5 INPUTCHAR; V4:=INPUTCHAR;
ENDIF;
INPUTCHAR:=0;
WRITE 6 'DEFAULT SCALING OF MULTIPOLE COEFFICIENTS IS TO R = 4.5 cm.';
WRITE 6 'ENTER A NEW VALUE OF R.';
WRITE 6 'TO KEEP THE DEFAULT VALUE OF R, ENTER OR 0 OR <CR>.';
WRITE 6 '[0/(Real number)]';
READ 5 INPUTCHAR; IF INPUTCHAR#0; R:=INPUTCHAR; ENDIF;

CPUSEC CPUTIME1;
MULTIPOLETERMS R Rref;
CPUSEC CPUTIME2;
WRITE 6 '' 'Elapsed time: '&S(CPUTIME2-CPUTIME1);

ENDPROCEDURE;
RUN;
END;